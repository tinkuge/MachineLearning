{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"RudimentarySoftmax","provenance":[],"collapsed_sections":[],"authorship_tag":"ABX9TyMZ8ehkmOjn9I1KpUSzE8p9"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"mVN7aeDE9yjw","colab_type":"text"},"source":["This is a rudimentary implementation of softmax over FashionMNIST dataset"]},{"cell_type":"code","metadata":{"id":"e_lHy96JhB2l","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":850},"executionInfo":{"status":"ok","timestamp":1598717397201,"user_tz":420,"elapsed":3335,"user":{"displayName":"Dinakar Geddapu","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhcRIoVExYcdvhSOVBJo3iiy9SWT0WI6bFoIcBHqA=s64","userId":"05110836538322591722"}},"outputId":"bf7e5c29-e688-4b78-e7dd-e3b08d1a276c"},"source":["!pip install d2l"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Requirement already satisfied: d2l in /usr/local/lib/python3.6/dist-packages (0.14.3)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.6/dist-packages (from d2l) (1.18.5)\n","Requirement already satisfied: pandas in /usr/local/lib/python3.6/dist-packages (from d2l) (1.0.5)\n","Requirement already satisfied: jupyter in /usr/local/lib/python3.6/dist-packages (from d2l) (1.0.0)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.6/dist-packages (from d2l) (3.2.2)\n","Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.6/dist-packages (from pandas->d2l) (2018.9)\n","Requirement already satisfied: python-dateutil>=2.6.1 in /usr/local/lib/python3.6/dist-packages (from pandas->d2l) (2.8.1)\n","Requirement already satisfied: jupyter-console in /usr/local/lib/python3.6/dist-packages (from jupyter->d2l) (5.2.0)\n","Requirement already satisfied: nbconvert in /usr/local/lib/python3.6/dist-packages (from jupyter->d2l) (5.6.1)\n","Requirement already satisfied: qtconsole in /usr/local/lib/python3.6/dist-packages (from jupyter->d2l) (4.7.6)\n","Requirement already satisfied: ipywidgets in /usr/local/lib/python3.6/dist-packages (from jupyter->d2l) (7.5.1)\n","Requirement already satisfied: ipykernel in /usr/local/lib/python3.6/dist-packages (from jupyter->d2l) (4.10.1)\n","Requirement already satisfied: notebook in /usr/local/lib/python3.6/dist-packages (from jupyter->d2l) (5.3.1)\n","Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib->d2l) (2.4.7)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.6/dist-packages (from matplotlib->d2l) (0.10.0)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.6/dist-packages (from matplotlib->d2l) (1.2.0)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.6/dist-packages (from python-dateutil>=2.6.1->pandas->d2l) (1.15.0)\n","Requirement already satisfied: pygments in /usr/local/lib/python3.6/dist-packages (from jupyter-console->jupyter->d2l) (2.1.3)\n","Requirement already satisfied: prompt-toolkit<2.0.0,>=1.0.0 in /usr/local/lib/python3.6/dist-packages (from jupyter-console->jupyter->d2l) (1.0.18)\n","Requirement already satisfied: ipython in /usr/local/lib/python3.6/dist-packages (from jupyter-console->jupyter->d2l) (5.5.0)\n","Requirement already satisfied: jupyter-client in /usr/local/lib/python3.6/dist-packages (from jupyter-console->jupyter->d2l) (5.3.5)\n","Requirement already satisfied: traitlets>=4.2 in /usr/local/lib/python3.6/dist-packages (from nbconvert->jupyter->d2l) (4.3.3)\n","Requirement already satisfied: bleach in /usr/local/lib/python3.6/dist-packages (from nbconvert->jupyter->d2l) (3.1.5)\n","Requirement already satisfied: pandocfilters>=1.4.1 in /usr/local/lib/python3.6/dist-packages (from nbconvert->jupyter->d2l) (1.4.2)\n","Requirement already satisfied: mistune<2,>=0.8.1 in /usr/local/lib/python3.6/dist-packages (from nbconvert->jupyter->d2l) (0.8.4)\n","Requirement already satisfied: defusedxml in /usr/local/lib/python3.6/dist-packages (from nbconvert->jupyter->d2l) (0.6.0)\n","Requirement already satisfied: jinja2>=2.4 in /usr/local/lib/python3.6/dist-packages (from nbconvert->jupyter->d2l) (2.11.2)\n","Requirement already satisfied: testpath in /usr/local/lib/python3.6/dist-packages (from nbconvert->jupyter->d2l) (0.4.4)\n","Requirement already satisfied: jupyter-core in /usr/local/lib/python3.6/dist-packages (from nbconvert->jupyter->d2l) (4.6.3)\n","Requirement already satisfied: entrypoints>=0.2.2 in /usr/local/lib/python3.6/dist-packages (from nbconvert->jupyter->d2l) (0.3)\n","Requirement already satisfied: nbformat>=4.4 in /usr/local/lib/python3.6/dist-packages (from nbconvert->jupyter->d2l) (5.0.7)\n","Requirement already satisfied: ipython-genutils in /usr/local/lib/python3.6/dist-packages (from qtconsole->jupyter->d2l) (0.2.0)\n","Requirement already satisfied: qtpy in /usr/local/lib/python3.6/dist-packages (from qtconsole->jupyter->d2l) (1.9.0)\n","Requirement already satisfied: pyzmq>=17.1 in /usr/local/lib/python3.6/dist-packages (from qtconsole->jupyter->d2l) (19.0.2)\n","Requirement already satisfied: widgetsnbextension~=3.5.0 in /usr/local/lib/python3.6/dist-packages (from ipywidgets->jupyter->d2l) (3.5.1)\n","Requirement already satisfied: tornado>=4.0 in /usr/local/lib/python3.6/dist-packages (from ipykernel->jupyter->d2l) (5.1.1)\n","Requirement already satisfied: Send2Trash in /usr/local/lib/python3.6/dist-packages (from notebook->jupyter->d2l) (1.5.0)\n","Requirement already satisfied: terminado>=0.8.1 in /usr/local/lib/python3.6/dist-packages (from notebook->jupyter->d2l) (0.8.3)\n","Requirement already satisfied: wcwidth in /usr/local/lib/python3.6/dist-packages (from prompt-toolkit<2.0.0,>=1.0.0->jupyter-console->jupyter->d2l) (0.2.5)\n","Requirement already satisfied: pickleshare in /usr/local/lib/python3.6/dist-packages (from ipython->jupyter-console->jupyter->d2l) (0.7.5)\n","Requirement already satisfied: decorator in /usr/local/lib/python3.6/dist-packages (from ipython->jupyter-console->jupyter->d2l) (4.4.2)\n","Requirement already satisfied: setuptools>=18.5 in /usr/local/lib/python3.6/dist-packages (from ipython->jupyter-console->jupyter->d2l) (49.6.0)\n","Requirement already satisfied: pexpect; sys_platform != \"win32\" in /usr/local/lib/python3.6/dist-packages (from ipython->jupyter-console->jupyter->d2l) (4.8.0)\n","Requirement already satisfied: simplegeneric>0.8 in /usr/local/lib/python3.6/dist-packages (from ipython->jupyter-console->jupyter->d2l) (0.8.1)\n","Requirement already satisfied: webencodings in /usr/local/lib/python3.6/dist-packages (from bleach->nbconvert->jupyter->d2l) (0.5.1)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.6/dist-packages (from bleach->nbconvert->jupyter->d2l) (20.4)\n","Requirement already satisfied: MarkupSafe>=0.23 in /usr/local/lib/python3.6/dist-packages (from jinja2>=2.4->nbconvert->jupyter->d2l) (1.1.1)\n","Requirement already satisfied: jsonschema!=2.5.0,>=2.4 in /usr/local/lib/python3.6/dist-packages (from nbformat>=4.4->nbconvert->jupyter->d2l) (2.6.0)\n","Requirement already satisfied: ptyprocess; os_name != \"nt\" in /usr/local/lib/python3.6/dist-packages (from terminado>=0.8.1->notebook->jupyter->d2l) (0.6.0)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"8Daz70cJhIXy","colab_type":"code","colab":{}},"source":["from d2l import tensorflow as d2l\n","import tensorflow as tf"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"dNKbFAskhOH7","colab_type":"code","colab":{}},"source":["batch_size = 256\n","train_iter, test_iter = d2l.load_data_fashion_mnist(batch_size)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"aEFT38NYhZAx","colab_type":"code","colab":{}},"source":["model = tf.keras.models.Sequential()\n","model.add(tf.keras.layers.Flatten(input_shape = (28,28)))\n","rand_weight_init = tf.keras.initializers.random_normal(stddev = 0.01)\n","#Dense receives an input of (batch_size, 784)\n","#kernel/weight matrix shape infers its shape to (784, 10)\n","model.add(tf.keras.layers.Dense(10, kernel_initializer= rand_weight_init))"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Zj9c9k9dG_Mh","colab_type":"text"},"source":["The shape of the output matrix or prediction matrix would be `(batch_size,10)`"]},{"cell_type":"code","metadata":{"id":"qOL0MQiblxn9","colab_type":"code","colab":{}},"source":["loss = tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"lTqEYrYzorkz","colab_type":"code","colab":{}},"source":["optimizer = tf.keras.optimizers.SGD()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"d-bJDy8tpDAl","colab_type":"code","colab":{}},"source":["n_epochs = 20"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"jzcEOZ7WsDzP","colab_type":"code","colab":{}},"source":["def trainModel(model, train_iter, loss, trainer):\n","  #every loop, train_iter makes a call to d2l.load_data_fashion_mnist\n","  #and gets a new set of images and labels\n","  totEx = 0 #total examples so far\n","  trnLoss = 0 #sum of training losses\n","  trnCorr = 0 #total number of correct predictions\n","  for X,y in train_iter:\n","    #shape of X is (batchsize, total number of pixels in an image)\n","    #get predictions for each example in X\n","    #y_hat shape = (batchsize,10)\n","    \n","    with tf.GradientTape() as tape:\n","      #get predictions for X\n","      yhat = model(X)\n","\n","      #keras loss is average loss over a batch\n","      l = loss(y,yhat)\n","\n","    #Get the model's trainable variables (w,b)\n","    trnVar = model.trainable_variables\n","    #Get the gradients with respect to trainable variables\n","    dg = tape.gradient(l, trnVar)\n","    #update the weights with gradients\n","    trainer.apply_gradients(zip(dg, trnVar))\n","\n","    #track the training loss and training accuracy and return them\n","    totEx = totEx + len(y)\n","    lsum = l*len(y)\n","    trnLoss = trnLoss+lsum\n","    #print(\"Training loss so far: {:.3f}\".format(trnLoss/totEx))\n","    yhat = tf.argmax(yhat, axis = 1)\n","    comp = (tf.cast(yhat, y.dtype) == y)\n","    #print(comp)\n","    numcor = tf.reduce_sum(tf.cast(comp, y.dtype))\n","    #print(f\"Number correct: {numcor}\")\n","    trnCorr = trnCorr+numcor\n","    #print(f\"Total correct: {trnCorr}\")\n","    \n","    #print(\"Training accuracy so far: {:.3f}\".format(trnCorr/totEx))\n","\n","  #print(\"Final training loss: {:.3f}\".format(trnLoss/totEx))\n","  print(\"Final training accuracy: {:.3f}\".format(trnCorr/totEx))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"zv-k-ffYsM1Y","colab_type":"code","colab":{}},"source":["def testModel(model, test_iter):\n","  totCorr = 0\n","  totEx = 0\n","  for X, y in test_iter:\n","    yhat = model(X)\n","\n","    #compare with y\n","    #yhat is now a vector of indices where each index corresponds\n","    #to the max value\n","    yhat = tf.argmax(yhat, axis=1)\n","    #comparison vector holds true or false for each row\n","    comp = (tf.cast(yhat, y.dtype) == y)\n","    numcor = tf.reduce_sum(tf.cast(comp, y.dtype))\n","    totCorr = totCorr+numcor\n","    totEx = totEx+len(y)\n","    #print(\"Test Accuracy so far: {:.3f}\".format(totCorr/totEx))\n","  print(\"Model Accuracy = {:.3f}\".format(totCorr/totEx))"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"rOV3UGWHqcQn","colab_type":"code","colab":{}},"source":["def evalModel(model, train_iter, test_iter, loss, n_epochs, optimizer):\n","  for i in range(n_epochs):\n","    trainModel(model, train_iter, loss, optimizer)\n","    testModel(model, test_iter)\n"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"bSc77I6ms_Uc","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":697},"executionInfo":{"status":"ok","timestamp":1598717429273,"user_tz":420,"elapsed":35321,"user":{"displayName":"Dinakar Geddapu","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GhcRIoVExYcdvhSOVBJo3iiy9SWT0WI6bFoIcBHqA=s64","userId":"05110836538322591722"}},"outputId":"80299ec6-39a7-459d-cf30-27905a454d71"},"source":["evalModel(model, train_iter, test_iter, loss, n_epochs, optimizer)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Final training accuracy: 0.640\n","Model Accuracy = 0.682\n","Final training accuracy: 0.716\n","Model Accuracy = 0.723\n","Final training accuracy: 0.750\n","Model Accuracy = 0.746\n","Final training accuracy: 0.767\n","Model Accuracy = 0.759\n","Final training accuracy: 0.778\n","Model Accuracy = 0.772\n","Final training accuracy: 0.788\n","Model Accuracy = 0.778\n","Final training accuracy: 0.794\n","Model Accuracy = 0.784\n","Final training accuracy: 0.800\n","Model Accuracy = 0.788\n","Final training accuracy: 0.804\n","Model Accuracy = 0.792\n","Final training accuracy: 0.806\n","Model Accuracy = 0.797\n","Final training accuracy: 0.809\n","Model Accuracy = 0.797\n","Final training accuracy: 0.812\n","Model Accuracy = 0.799\n","Final training accuracy: 0.815\n","Model Accuracy = 0.805\n","Final training accuracy: 0.817\n","Model Accuracy = 0.806\n","Final training accuracy: 0.818\n","Model Accuracy = 0.806\n","Final training accuracy: 0.820\n","Model Accuracy = 0.808\n","Final training accuracy: 0.821\n","Model Accuracy = 0.810\n","Final training accuracy: 0.823\n","Model Accuracy = 0.811\n","Final training accuracy: 0.824\n","Model Accuracy = 0.811\n","Final training accuracy: 0.825\n","Model Accuracy = 0.814\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"I8uoUxkLtIyB","colab_type":"code","colab":{}},"source":[""],"execution_count":null,"outputs":[]}]}